type Tag {
  id: Int!
  title: String!
  user: User!
  userId: Int
  createdAt: String
}

type CreateAccountResponse {
  ok: Boolean!
  err: String
  token: String
}

type Mutation {
  CreateAccount(email: String!, username: String!, firstName: String!, lastName: String!, password: String!): CreateAccountResponse!
  CreateProfile(gender: String!, age: Int!, profilePhoto: String!, images: [String], preference: [String], location: String!, intro: String!): CreateProfileResponse!
  EditProfile(username: String!, firstName: String, lastName: String, profilePhoto: String, intro: String, gender: String, age: Int, preference: [String], location: String): EditProfileResponse!
  RequestCode(email: String!): RequestCodeResponse!
  UserLogin(email: String!, password: String!): UserLoginResponse!
  UserVerification(email: String!, code: String!): UserVerificationResponse!
}

type CreateProfileResponse {
  ok: Boolean!
  err: String
  user: User
}

type EditProfileResponse {
  ok: Boolean!
  err: String
  user: User
}

type GetMeResponse {
  ok: Boolean!
  err: String
  user: User
}

type Query {
  GetMe: GetMeResponse!
  GetUser(id: Int!): GetUserResponse!
  users: [User]
}

type GetUserResponse {
  ok: Boolean!
  err: String
  user: User
}

type RequestCodeResponse {
  ok: Boolean!
  err: String
}

type Block {
  user: User!
  userId: Int!
  createdAt: String
}

type Follower {
  id: Int!
  user: User!
  userId: Int
  isLiked: Boolean
  createdAt: String
}

type Following {
  id: Int!
  user: User!
  userId: Int
  isLiked: Boolean
  createdAt: String
}

type Image {
  id: Int!
  user: User!
  userId: Int
  url: String!
  createdAt: String
}

type Report {
  id: Int!
  user: User!
  userId: Int!
  createdAt: String
}

type User {
  id: Int!
  email: String!
  password: String!
  username: String!
  firstName: String!
  lastName: String!
  profilePhoto: String
  intro: String
  gender: String
  age: Int
  preference: [String]
  location: String
  lastLat: Float
  lastLng: Float
  secretCode: String
  images: [Image]
  block: [Block]
  following: [Following]
  followingcount: Int
  follower: [Follower]
  followercount: Int
  tags: [Tag]
  fameRating: Int
  isReported: [Report]
  isBlocked: Boolean!
  isVerified: Boolean!
  createdAt: String
  updatedAt: String
}

type UserLoginResponse {
  ok: Boolean!
  err: String
  token: String
}

type UserVerificationResponse {
  ok: Boolean!
  err: String
}
